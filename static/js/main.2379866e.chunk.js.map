{"version":3,"sources":["navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","blogs","map","blog","id","title","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2379866e.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n\treturn (\r\n      <nav className=\"Navbar\">\r\n      <h1>BLOG</h1>\r\n      <div className=\"links\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/create\" style={{ \r\n          color: 'white', \r\n          backgroundColor: '#f1356d',\r\n          borderRadius: '8px' \r\n        }}\r\n      \t>New blog</Link>\r\n      </div>\r\n       </nav>\r\n\t\t);\r\n}\r\n\r\nexport default Navbar;","import { Link } from 'react-router-dom';\r\n\r\nconst BlogList = ({blogs}) => {\r\n\treturn(\r\n\t\t <div className=\"blog-list\">\r\n     \r\n      {blogs.map(blog => (\r\n        <div className=\"blog-preview\" key={blog.id} >\r\n         <Link to={`/blogs/${blog.id}`}>\r\n          <h2>{ blog.title }</h2>\r\n          <p>Written by { blog.author }</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default BlogList;","import { useState, useEffect } from 'react';\r\n\r\n\r\nconst useFetch = (url) => {\r\n\tconst [data, setData] = useState(null)\r\n    const [isPending, setIsPending] = useState(true);\r\n\tconst [error,setError] = useState(null);\r\n\t \r\n\t useEffect(() => {\r\n\t \tconst abortCont = new AbortController();\r\n\r\n    fetch(url,{ signal: abortCont.signal })\r\n      .then(res => {\r\n      \tif(!res.ok){\r\n      \t\tthrow Error('could not fetch the data for that resource');\r\n      \t}\r\n\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n      \tsetIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      \t.catch(err => {\r\n      \t\tif (err.name === 'AbortError') {\r\n          console.log('fetch aborted')\r\n        } else {\r\n          // auto catches network / connection error\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      \t\t\r\n       })\r\n      \t return () => abortCont.abort();\r\n  }, [url])\r\n return { data,isPending,error };\r\n}\r\n\r\nexport default useFetch;"," \r\nimport BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n\tconst { error, isPending, data: blogs } = useFetch('http://localhost:8000/blogs')\r\n\r\n\r\n\t\r\n\treturn(\r\n\t\t<div className=\"Home\">\r\n\t\t{ error && <div>{ error }</div> }\r\n\t\t{ isPending && <div>Loading...</div> }\r\n\t{blogs && <BlogList blogs={blogs} />}\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default Home;","import { useState } from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst Create = () => {\r\n\tconst [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [isPending,setIsPending] = useState(false);\r\n    const history=useHistory();\r\n      const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n\r\n     setIsPending(true); \r\n\r\n    fetch('http://localhost:8000/blogs/',{\r\n    \tmethod:'POST',\r\n    \theaders:{\"Content-Type\":\"application/json\"},\r\n    \tbody:JSON.stringify(blog)\r\n    }).then(() => {\r\n    \tconsole.log('new blog added');\r\n    \tsetIsPending(false);\r\n    \thistory.push('/');\r\n    })\r\n}\r\n\r\n\r\n\r\n    return (\r\n       <div className=\"create\">\r\n         <h2>Add a New Blog</h2>\r\n         <form onSubmit={handleSubmit}>\r\n         <label>Blog Title:</label>\r\n         <input\r\n          type=\"text\"\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          ></input>\r\n          <label>Blog body:</label>\r\n        <textarea\r\n          required\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n        <label>Blog author:</label>\r\n       \r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n          ></input>\r\n\r\n        {!isPending && <button>Add Blog</button>}\r\n        {isPending && <button disabled>Adding Blog</button>}\r\n      </form>\r\n         </div>\r\n\t\t);\r\n}\r\nexport default Create;","import {  useHistory,useParams } from \"react-router-dom\";\r\nimport useFetch from './useFetch'\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams();\r\n  const { data:blog,error,isPending }=useFetch('http://localhost:8000/blogs/'+ id);\r\n    const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    fetch('http://localhost:8000/blogs/' + blog.id, {\r\n      method: 'DELETE'\r\n    }).then(() => {\r\n      history.push('/');\r\n    }) \r\n  }\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n     {isPending && <div>Loading...</div>}\r\n     {error && <div>{error}</div>}\r\n     {blog   && (\r\n     \t<article>\r\n     \t<h2>{blog.title}</h2>\r\n     \t<p>Written by {blog.author}</p>\r\n     \t<div>{blog.body}</div>\r\n     \t<button onClick={handleClick}>delete</button>\r\n        </article>\r\n\r\n     \t)}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h2>Sorry</h2>\r\n      <p>That page cannot be found</p>\r\n      <Link to=\"/\">Back to the homepage...</Link>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default NotFound;","\n \nimport Navbar from  './navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router,Route,Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Navbar/>\n      <div className=\"content\">\n     <Switch>\n        <Route exact  path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/create\">\n          <Create />\n        </Route>\n         <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n     </Switch>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}